buildscript {
    ext.gaeVersion = '1.9.38'
    repositories {
        jcenter()
    }
    dependencies {
        classpath "com.google.appengine:gradle-appengine-plugin:$gaeVersion"
    }
}

apply plugin: 'groovy'
apply plugin: 'war'
apply plugin: 'appengine'

repositories {
    jcenter()
}

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.4.6'
    compile 'com.github.groovy-wslite:groovy-wslite:1.1.2'
    compile 'org.gaelyk:gaelyk:2.1.2'

    compile "com.google.appengine:appengine-api-1.0-sdk:$gaeVersion"
    compile "com.google.appengine:appengine-api-labs:$gaeVersion"
    compile 'javax.servlet:servlet-api:2.5'

    testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'
    testCompile 'org.gaelyk:gaelyk-spock:0.4'
    testCompile "com.google.appengine:appengine-api-stubs:$gaeVersion"
    testCompile "com.google.appengine:appengine-testing:$gaeVersion"

    appengineSdk "com.google.appengine:appengine-java-sdk:$gaeVersion"
}

appengine {
    warDir = file("$buildDir/assets")
    jvmFlags = ['-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8890']
    downloadSdk = true
    disableUpdateCheck = true
    appcfg {
        oauth2 = true
        if (file('build/appengine-key.json').exists()) {
            extraOptions << '--service_account_json_key_file=build/appengine-key.json'
        }
    }
}

war {
    webAppDirName = appengine.warDir
}

task appengineWebApp(type: Sync) {
    into("${appengine.warDir}/WEB-INF")
    from 'src/main/web-inf'
    into('lib') { from configurations.runtime }
}

tasks.withType(AbstractCompile) { it.dependsOn appengineWebApp }
sourceSets.main.output.classesDir = "${appengine.warDir}/WEB-INF/classes"
